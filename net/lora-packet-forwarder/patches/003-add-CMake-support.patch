From d4088124704f458f31b3b10768c8f3f50eb9886e Mon Sep 17 00:00:00 2001
From: Xue Liu <liuxuenetmail@gmail.com>
Date: Thu, 21 Feb 2019 15:06:52 +0100
Subject: [PATCH 1/1] - add CMake support

Signed-off-by: Xue Liu <liuxuenetmail@gmail.com>
---
 CMakeLists.txt              | 72 +++++++++++++++++++++++++++++++++++++
 lora_pkt_fwd/CMakeLists.txt | 68 +++++++++++++++++++++++++++++++++++
 util_ack/CMakeLists.txt     | 36 +++++++++++++++++++
 util_sink/CMakeLists.txt    | 37 +++++++++++++++++++
 util_tx_test/CMakeLists.txt | 43 ++++++++++++++++++++++
 5 files changed, 256 insertions(+)
 create mode 100644 CMakeLists.txt
 create mode 100644 lora_pkt_fwd/CMakeLists.txt
 create mode 100644 util_ack/CMakeLists.txt
 create mode 100644 util_sink/CMakeLists.txt
 create mode 100644 util_tx_test/CMakeLists.txt

diff --git a/CMakeLists.txt b/CMakeLists.txt
new file mode 100644
index 0000000..7e6c18b
--- /dev/null
+++ b/CMakeLists.txt
@@ -0,0 +1,72 @@
+# -- Minimum required version
+cmake_minimum_required (VERSION 3.2)
+
+# -- Project name
+project (packet_forwarder)
+
+# -- Various includes
+include (CMakePackageConfigHelpers)
+include (GNUInstallDirs)
+include (CheckFunctionExists)
+
+# -- set c99 standard default
+set(CMAKE_C_STANDARD 99)
+
+# -- Required to build
+set(CMAKE_THREAD_PREFER_PTHREAD TRUE)
+set(THREADS_PREFER_PTHREAD_FLAG TRUE)
+find_package(Threads REQUIRED)
+
+# -- Versioning with git tag
+if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/.git)
+	execute_process(
+		COMMAND git describe --tags --always
+		WORKING_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}"
+		OUTPUT_VARIABLE "packet_forwarder_VERSION"
+		ERROR_QUIET
+		OUTPUT_STRIP_TRAILING_WHITESPACE)
+		if(packet_forwarder_VERSION STREQUAL "")
+			set(packet_forwarder_VERSION 0)
+		endif(packet_forwarder_VERSION STREQUAL "")
+		message( STATUS "Git full version: ${packet_forwarder_VERSION}" )
+	execute_process(
+		COMMAND /bin/bash -c "git describe --tags --abbrev=0 | cut --delimiter='v' --fields=2"
+		WORKING_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}"
+		OUTPUT_VARIABLE "packet_forwarder_VERSION_SHORT"
+		ERROR_QUIET
+		OUTPUT_STRIP_TRAILING_WHITESPACE)
+		if(packet_forwarder_VERSION_SHORT STREQUAL "")
+			set(packet_forwarder_VERSION_SHORT 0)
+		endif(packet_forwarder_VERSION_SHORT STREQUAL "")
+		message( STATUS "Git version: ${packet_forwarder_VERSION_SHORT}" )
+else(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/.git)
+	set(packet_forwarder_VERSION_SHORT 0)
+	set(packet_forwarder_VERSION 0)
+endif(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/.git)
+
+# -- find packages
+find_package(loragw QUIET)
+if(NOT loragw_FOUND)
+	find_package(PkgConfig)
+	pkg_search_module(LORAGW loragw)
+
+	if(LORAGW_FOUND)
+		message("-- pkg_config: libloragw is found")
+		message("-- libloragw include: ${LORAGW_INCLUDE_DIRS}")
+		message("-- libloragw library: ${LORAGW_LINK_LIBRARIES}")
+	endif()
+else()
+	message("-- CMake: libloragw is found")
+endif()
+
+# -- add the lora_pkt_fwd
+add_subdirectory(lora_pkt_fwd)
+
+# -- add the util_ack
+add_subdirectory(util_ack)
+
+# -- add the util_sink
+add_subdirectory(util_sink)
+
+# -- add the util_tx_test
+add_subdirectory(util_tx_test)
diff --git a/lora_pkt_fwd/CMakeLists.txt b/lora_pkt_fwd/CMakeLists.txt
new file mode 100644
index 0000000..4d61fdd
--- /dev/null
+++ b/lora_pkt_fwd/CMakeLists.txt
@@ -0,0 +1,68 @@
+set(TARGET lora_pkt_fwd)
+
+add_executable(${TARGET} "")
+
+# --  add the compile options
+target_compile_options(
+	${TARGET}
+	PRIVATE
+	-Wall
+	-Wextra
+)
+
+target_compile_definitions(
+	${TARGET}
+	PRIVATE
+	VERSION_STRING="${packet_forwarder_VERSION_SHORT}"
+)
+
+target_sources(${TARGET}
+	PRIVATE
+		${CMAKE_CURRENT_LIST_DIR}/src/base64.c
+		${CMAKE_CURRENT_LIST_DIR}/src/jitqueue.c
+		${CMAKE_CURRENT_LIST_DIR}/src/lora_pkt_fwd.c
+		${CMAKE_CURRENT_LIST_DIR}/src/parson.c
+		${CMAKE_CURRENT_LIST_DIR}/src/timersync.c
+)
+
+target_include_directories(${TARGET}
+	PRIVATE
+		${CMAKE_CURRENT_LIST_DIR}
+		${CMAKE_CURRENT_LIST_DIR}/inc
+)
+
+target_link_libraries(${TARGET}
+	PUBLIC
+		Threads::Threads
+		m
+)
+
+if(LORAGW_FOUND)
+target_include_directories(${TARGET}
+	PRIVATE
+		${LORAGW_INCLUDE_DIRS}
+)
+
+target_link_libraries(${TARGET}
+	PRIVATE
+		${LORAGW_LINK_LIBRARIES}
+)
+endif()
+
+if(loragw_FOUND)
+target_link_libraries(${TARGET}
+	PRIVATE
+		Semtech::loragw
+)
+endif()
+
+set_target_properties(${TARGET} PROPERTIES VERSION ${packet_forwarder_VERSION})
+set_target_properties(${TARGET} PROPERTIES SOVERSION ${packet_forwarder_VERSION_SHORT})
+
+# add the install targets
+install (
+	TARGETS ${TARGET}
+	LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR} COMPONENT shlib
+	ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
+	RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
+)
diff --git a/util_ack/CMakeLists.txt b/util_ack/CMakeLists.txt
new file mode 100644
index 0000000..b2d776d
--- /dev/null
+++ b/util_ack/CMakeLists.txt
@@ -0,0 +1,36 @@
+
+add_executable(util_ack "")
+target_sources(util_ack
+        PRIVATE
+        ${CMAKE_CURRENT_LIST_DIR}/src/util_ack.c
+)
+
+if(LORAGW_FOUND)
+target_include_directories(util_ack
+	PRIVATE
+		${LORAGW_INCLUDE_DIRS}
+)
+
+target_link_libraries(util_ack
+	PRIVATE
+		${LORAGW_LINK_LIBRARIES}
+)
+endif()
+
+if(loragw_FOUND)
+target_link_libraries(util_ack
+	PRIVATE
+		Semtech::loragw
+)
+endif()
+set_target_properties(util_ack PROPERTIES
+        RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin
+)
+
+# add the install targets
+install (
+        TARGETS util_ack
+  	LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR} COMPONENT shlib
+	ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
+	RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
+)
diff --git a/util_sink/CMakeLists.txt b/util_sink/CMakeLists.txt
new file mode 100644
index 0000000..c006fa7
--- /dev/null
+++ b/util_sink/CMakeLists.txt
@@ -0,0 +1,37 @@
+
+add_executable(util_sink "")
+target_sources(util_sink
+        PRIVATE
+	${CMAKE_CURRENT_LIST_DIR}/src/util_sink.c
+)
+
+if(LORAGW_FOUND)
+target_include_directories(util_sink
+	PRIVATE
+		${LORAGW_INCLUDE_DIRS}
+)
+
+target_link_libraries(util_sink
+	PRIVATE
+		${LORAGW_LINK_LIBRARIES}
+)
+endif()
+
+if(loragw_FOUND)
+target_link_libraries(util_sink
+	PRIVATE
+		Semtech::loragw
+)
+endif()
+
+set_target_properties(util_sink PROPERTIES
+        RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin
+)
+
+# add the install targets
+install (
+        TARGETS util_sink
+  	LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR} COMPONENT shlib
+	ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
+	RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
+)
diff --git a/util_tx_test/CMakeLists.txt b/util_tx_test/CMakeLists.txt
new file mode 100644
index 0000000..2207cac
--- /dev/null
+++ b/util_tx_test/CMakeLists.txt
@@ -0,0 +1,43 @@
+
+add_executable(util_tx_test "")
+target_sources(util_tx_test
+        PRIVATE
+	${CMAKE_CURRENT_LIST_DIR}/src/util_tx_test.c
+	${CMAKE_CURRENT_LIST_DIR}/src/base64.c
+)
+
+target_include_directories(util_tx_test
+	PRIVATE
+        ${CMAKE_CURRENT_LIST_DIR}/inc
+)
+
+if(LORAGW_FOUND)
+target_include_directories(util_tx_test
+	PRIVATE
+		${LORAGW_INCLUDE_DIRS}
+)
+
+target_link_libraries(util_tx_test
+	PRIVATE
+		${LORAGW_LINK_LIBRARIES}
+)
+endif()
+
+if(loragw_FOUND)
+target_link_libraries(util_tx_test
+	PRIVATE
+		Semtech::loragw
+)
+endif()
+
+set_target_properties(util_tx_test PROPERTIES
+        RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin
+)
+
+# add the install targets
+install (
+        TARGETS util_tx_test
+  	LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR} COMPONENT shlib
+	ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
+	RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
+)
-- 
2.20.1

