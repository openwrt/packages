#!/bin/sh /etc/rc.common
# Copyright (C) 2010-2015 OpenWrt.org

START=99
USE_PROCD=1

dnsmasq_walk_add() {
	local id=$1
	local listen_IP=$(echo $listen | cut -d ':' -f1)
	local listen_port=$(echo $listen | cut -d ':' -f2)

	uci set dhcp.$id.noresolv="1" >/dev/null 2>&1
	uci delete dhcp.$id.server >/dev/null 2>&1
	uci add_list dhcp.$id.server="$listen_IP#$listen_port" >/dev/null 2>&1
}
dnsmasq_walk_del() {
	local id=$1

	uci delete dhcp.$id.noresolv >/dev/null 2>&1
	uci delete dhcp.$id.server >/dev/null 2>&1
}

antiblock_walk_add() {
	local id=$1

	config_get log "$id" log
	config_get stat "$id" stat
	config_get url "$id" url
	config_get file "$id" file
	config_get output "$id" output
	config_get DNS "$id" DNS
	config_get listen "$id" listen
	config_get VPN_name "$id" VPN_name
}

start_service() {
	echo "AntiBlock start"

	log=""
	stat=""
	url=""
	file=""
	output=""
	DNS=""
	listen=""
	VPN_name=""

	config_load antiblock
	config_foreach antiblock_walk_add antiblock

	procd_open_instance

	procd_set_param command "/usr/bin/antiblock"
	procd_set_param stdout 1

	if [[ "$log" != "" ]]; then
		procd_append_param command -log
	fi
	if [[ "$stat" != "" ]]; then
		procd_append_param command -stat
	fi
	if [[ "$url" != "" ]]; then
		procd_append_param command -url "$url"
	fi
	if [[ "$file" != "" ]]; then
		procd_append_param command -file "$file"
	fi
	if [[ "$output" != "" ]]; then
		mkdir -p $output
		procd_append_param command -output $output
	fi
	if [[ "$DNS" != "" ]]; then
		procd_append_param command -DNS "$DNS"
	fi
	if [[ "$listen" != "" ]]; then
		config_load dhcp
		config_foreach dnsmasq_walk_add dnsmasq
		procd_append_param command -listen "$listen"
	fi
	if [[ "$VPN_name" != "" ]]; then
		gateway=$(uci get network.$VPN_name.addresses | cut -d '/' -f1)
		procd_append_param command -gateway "$gateway"
	fi

	procd_close_instance

	uci commit

	/etc/init.d/dnsmasq restart >/dev/null 2>&1
}

stop_service() {
	echo "AntiBlock stop"

	config_load dhcp
	config_foreach dnsmasq_walk_del dnsmasq

	uci commit

	/etc/init.d/dnsmasq restart >/dev/null 2>&1
}

service_triggers() {
	procd_add_reload_trigger "antiblock"
}
