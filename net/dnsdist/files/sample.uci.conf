config dnsdist general
  option 'enabled' '1'
  # private key to use for incoming DoT and DoH
  option 'tls_key' '/etc/dnsdist.key'
  # certificate to use for incoming DoT and DoH
  option 'tls_cert' '/etc/dnsdist.pem'
  # the fingerprint of the certificate, so we know we need to reload it
  # Example: '37:4F:E4:F7:F2:23:C8:2A:25:F6:43:80:52:42:E2:C9:50:2F:AD:16'
  option 'tls_cert_fingerprint' ''
  # minimum TLS version to accept ('tls1.0', 'tls1.1', 'tls1.2', 'tls1.3')
  option 'tls_min_version' 'tls1.2'
  # TLS ciphers used for incoming connections, for TLS < 1.3 (if this value is empty the OpenSSL defaults will be used)
  option 'tls_ciphers_incoming' 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305'
  # TLS ciphers used for incoming connections, for TLS 1.3 (if this value is empty the OpenSSL defaults will be used)
  option 'tls_ciphers13_incoming' ''
  # TLS ciphers used for outgoing connections, for TLS < 1.3 (if this value is empty the OpenSSL defaults will be used)
  option 'tls_ciphers_outgoing' 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305'
  # TLS ciphers used for outgoing connections, for TLS 1.3 (if this value is empty the OpenSSL defaults will be used)
  option 'tls_ciphers13_outgoing' ''
  # Number of entries in the domain cache. 0 means caching is disabled, the maximum value is 2^32-1 entries
  # but is likely limited by the amount of RAM available.
  option 'domain_cache_size' '100'
  # Cap the TTL of cached records to the supplied number of seconds. Default is 600 (10 minutes), minimum is 1, useful range is up to 86400.
  # Setting this value to the highest possible value for a TTL, 2^32-1, means that TTLs will not be capped.
  option 'domain_ttl_cap' '600'
  # Set how often the cache is scanned to expunge expired entries, in seconds. Default is 60s (every minute), minimum value is 0, useful range is up to 86400
  option 'domain_cleanup_interval' '60'
  # The TTL used for local domain responses. The values allowed by the DNS protocol range from 1 to 2^31-1
  option 'local_domains_ttl' '1'
  # The DNS suffix, or list of suffixes, identifying local domain names
  option 'local_domains_suffix' 'lan'
  # The TTL used for sentinel domains responses
  option 'sentinel_domains_ttl' '60'
  # Number of concurrent connections per client device. 0 means unlimited, the maximum value is 2^64-1.
  option 'concurrent_incoming_connections_per_device' '10'
  # The DNS engine will consider to accept queries on interfaces whose names match this pattern,
  # or list of patterns. When a list of patterns is provided, interfaces matching any pattern will
  # be considered. If this value is left empty, the DNS engine will consider all interfaces.
  # The interface names used are the device names as seen by the kernel, 'physical' and 'virtual' interface names,
  # not the ones from the netifd configuration, also called 'logical' interface names.
  # The default is the 'br' pattern as OpenWrt defaults to one bridge for local interfaces.
  option 'network_interface_include' 'br'
  # The DNS engine will NOT consider to accept queries on interfaces whose names match this pattern
  # or list of patterns. When a list of patterns is provided, interfaces matching any pattern will
  # not be considered. If this value is left empty, no interface will be excluded.
  # The interface names used are the device names as seen by the kernel, 'physical' and 'virtual' interface names,
  # not the ones from the netifd configuration, also called 'logical' interface names.
  # The default is to exclude interfaces matching the 'wan' and 'eth0.2' patterns,
  # as by default on most routers the wan interface is the second VLAN on the single network interface (eth0),
  # but it is sometimes named 'wan' on container hosts.
  option 'network_interface_exclude' 'wan eth0.2'
  # Pattern or list of patterns identifying WAN interfaces. If 'configuration_check_interval' is
  # set, only changes to the interfaces matching these patterns, plus the ones matching
  # 'network_interface_include' but not 'network_interface_exclude', will be considered
  # configuration changes. When a list of patterns is provided, matching any pattern is
  # enough to be considered. If this value is left empty, only the interfaces matching
  # 'network_interface_include' but not 'network_interface_exclude' will be considered.
  # The interface names used are the device names as seen by the kernel, 'physical' and 'virtual' interface names,
  # not the ones from the netifd configuration, also called 'logical' interface names.
  # Refer to 'network_interface_exclude' for the default value.
  option 'network_interface_wan_include' 'wan eth0.2'
  # Port on which to accept API queries
  option 'web_server_port' '9080'
  # Port on which to accept Do53 queries on (UDP and TCP)
  option 'do53_port' '53'
  # Port on which to accept DoT queries on
  option 'dot_port' '853'
  # Port on which to accept DoH queries on
  option 'doh_port' '443'
  # Interval between health-check queries to an upstream resolver, in seconds
  option 'default_check_interval' '5'
  # Health check timeout to an upstream resolver, in milliseconds
  option 'default_check_timeout' '1000'
  # Number of failed consecutive health-checks to mark an upstream resolver down
  option 'default_max_check_failures' '2'
  # Whether upstream resolvers learned via the system should be checked for DoT/DoH support
  option 'auto_upgrade_discovered_backends' '0'
  # Whether the Do53 version of auto-upgraded resolver should be kept as fallback
  option 'keep_auto_upgraded_backends' '1'
  # In which internal pool should upgraded resolver be placed. The pool will be created
  # if it does not exist. If this value is left empty upgraded resolvers are placed into
  # the 'upgraded-to-dox' pool
  option 'auto_upgraded_backends_pool' 'upgraded-to-dox'
  # How often should the configuration be checked for changes, in seconds. 0 means disabled
  option 'configuration_check_interval' '60'
  # Domain name for DoT / DoH advertisement, if any. The default is to advertise only for the opportunistic '_dns.resolver.arpa.' name.
  option 'advertise_for_domain_name' ''
  # User to switch to, after the configuration has been set up. Default is to run as user 'root'
  option 'user' 'dnsdist'
  # Group to switch to, after the configuration has been set up. Default is to run as group 'root'
  option 'group' 'dnsdist'
  # Whether to enable 'verbose' logging ('1') or not ('0')
  option 'verbose_mode' '0'
  # Log verbose-level messages to this file instead of syslog and stdout (the default)
  option 'verbose_log_destination' ''
  # Maximum number of TCP connections to an upstream resolver. 0 means no limit
  option 'default_max_upstream_concurrent_tcp_connections' '0'
  # Maximum number of cached idle TCP connections to an upstream resolver. Keeping more connections improves latency but uses memory and increases the load on the upstream resolver
  option 'max_idle_tcp_connections_per_downstream' '2'
  # Maximum number of cached idle DoH connections to an upstream resolver. Keeping more connections improves latency but uses memory and increases the load on the upstream resolver
  option 'max_idle_doh_connections_per_downstream' '2'
  # Number of outgoing UDP sockets to an upstream resolver. Higher values reduce the risk of a successful UDP spoofing attempt, but increase the memory usage. The minimum value is 1, and a sane maximum value is 32767, as higher values might require too many sockets. The default is 100
  option 'outgoing_udp_sockets_per_downstream' '100'
  # Maximum number of resolvers that can be used at the same time, either from the configuration
  # or learned via the system. Additional resolvers, if any, will be skipped.
  # Minimum value is 0, maximum is 100, default is 5.
  option 'max_upstream_resolvers' '5'
  # The maximum size of the sample of queries to record and consider for the
  # health-checking mechanism. Higher values use slightly more memory.
  # Minimum is 1, maximum is 10000, default is 100.
  option 'health_checks_sample_size' '100'
  # The minimum amount of regular queries that should have been recorded before the
  # health-check threshold can be applied. Minimum is 1, maximum is equal to 'health_checks_sample_size',
  # default is 10.
  option 'health_checks_min_sample_count' '10'
  # The threshold, as a percentage, of queries that should fail for the health-check
  # to be triggered. The default is 20 which means 20% of the last 'health_checks_sample_size' queries
  # should fail for a health-check to be triggered. Minimum is 1, maximum is 100.
  option 'health_checks_threshold' '20'
  # The interval, in seconds, between health-check queries. Note that when 'health_checks_exponential_backoff' is set to 1,
  # the interval doubles between every queries. These queries are only sent when a threshold of failing regular queries has
  # been reached, and until the backend is available again. Minimum is 1, maximum is 86400, default is 30 seconds.
  option 'health_checks_failed_interval' '30'
  # This setting controls which responses are considered a failure: 'TimeoutOnly' means that only timeout and I/O errors of
  # regular queries will be considered for the health-check threshold, while 'TimeoutOrServFail' will also consider 'Server Failure'
  # answers. Default is 'TimeoutOrServFail'.
  option 'health_checks_mode' 'TimeoutOrServFail'
  # Whether the health-check should use an exponential back-off instead of a fixed value, between health-check probes. If set to '0',
  # after a backend has been moved to the 'down' state health-check probes are sent every 'health_checks_failed_interval' seconds.
  # When set to '1', the delay between each probe starts at 'health_checks_failed_interval' seconds and doubles between every probe,
  # capped at 'health_checks_max_backoff' seconds. Default is '1'.
  option 'health_checks_exponential_backoff' '1'
  # This value, in seconds, caps the time between two health-check queries when 'health_checks_exponential_backoff' is set to '1'.
  # The default is 3600 which means that at most one hour will pass between two health-check queries. Minimum is 1, maximum is 86400.
  option 'health_checks_max_backoff' '3600'
  # The maximum PSS ("proportional set size") value acceptable for the dnsdist process, in kilobytes. The current PSS will be retrieved every 'configuration_check_interval' seconds and, if the specified threshold has been reached, the process will automatically restart to prevent consuming too much memory. The default is 0 which means that this check is disabled.
  option 'max_pss' '0'

# sentinel domains
config domainlist sentinel_domains
  # Exact matching of the name will be done unless it starts with '*.' in which case suffix matching will be done
  # IPv4 addresses configured on the configured interface will be returned to A queries, IPv6 to AAAA queries.
  # The interface names used are the device names as seen by the kernel, 'physical' and 'virtual' interface names,
  # not the ones from the netifd configuration, also called 'logical' interface names.
  list entry 'router br-lan'
  list entry '*.router br-lan'

# configuration for a given network interfaces.
# The configuration of the special name 'default_interface' will be applied
# to all interfaces that do not have a specific configuration entry, provided
# that they match 'network_interface_include' and do not match 'network_interface_exclude'.
# The interface names used are the device names as seen by the kernel, 'physical' and 'virtual' interface names,
# not the ones from the netifd configuration, also called 'logical' interface names.
config interface
  option name 'default_interface'
  # Whether dnsdist will listen on this interface
  option enabled 1
  # Whether dnsdist will accept Do53 queries, UDP and TCP, on this interface
  option do53 1
  # Whether dnsdist will accept DoT queries on this interface
  option dot 1
  # Whether dnsdist will accept DoH queries on this interface
  option doh 1
  # Whether local domain resolution will be enabled for queries received on this interface
  option local_resolution 1
  # Whether sentinel domain resolution will be enabled for queries received on this interface
  option sentinel_domains 'sentinel_domains'
  # Whether dnsdist will advertise DoT and/or DoH support, if available, in response to DDR queries received on this interface
  option advertise 0

# Configuration of resolvers
# If no resolver is defined, dnsdist will try to learn
# the addresses of resolvers from /tmp/resolv.conf.auto
#config server quad9doh
#  For DoT and DoH servers, the name to use as Server Name Indication
#  in the TLS handshake, and against which the certificate presented
#  by the server should be validated
#  option adn 'dns.quad9.net'
#  Type of server: do53, dot or doh
#  option type 'doh'
#  IP address of the server
#  option addr '9.9.9.9'
#  Port of the server (default is 53)
#  option port 443
#  For DoH servers, the HTTP path to use
#  option path '/dns-query'
#  Maximum value of concurrent queries to send to this server (TCP and DoT).
#  Possible values are 1 (default) to 65535.
#  Higher values yield better performance, but only if the server supports it.
#  option maxInFlight 1
#  Whether to validate the TLS certificate provided by the server, for
#  DoT and DoH ones. Default is true.
#  option validate 1
#  How many consecutive health-checks have to fail before this server is
#  no longer considered working. The default and minimum value is 1, the
#  maximum value is 255
#  option maxCheckFailures 1
#  Frequency of health-check queries, in seconds. The default and minimum value
#  is 1, the maximum value is 65535
#  option checkInterval 1
#  Timeout of health-check queries, in milliseconds. Default is 1000 which is one
#  second. Supported values are from 1 to 65535.
#  option checkTimeout 1000
#  If set, this server will be contacted using this network interface only.
#  If this condition cannot be satisfied because the interface is not valid,
#  this server will not be used.
#  The interface names used are the device names as seen by the kernel, 'physical' and 'virtual' interface names,
#  not the ones from the netifd configuration, also called 'logical' interface names.
#  option upstreamWANInterface 'wlan0'
#  The maximum number of concurrent TCP connections that should be opened
#  to this server. The default is 0, which means unlimited. The maximum value
#  is 2^32-1.
#  option maxConcurrentTCPConnections 0
#  Whether to use the Discovery of Designated Resolvers mechanism to check if
#  this server can be upgrade to DoT or DoH
#  option autoUpgrade 0
#  If auto-upgrade is enabled, how often should we check if an upgrade is possible, in seconds.
#  Default is 3600 which is once every hour. The minimum value is 1 second, the maximum is 2^32-1.
#  option autoUpgradeInterval 3600
#  Whether to keep the Do53 version of this backend as a fall-back after a
#  successful upgrade to DoT or DoH. Default is false.
#  option autoUpgradeKeep false
#  The pool to place this server into after a succesfull upgrade. The pool will be
#  created if it does not exist
#  option autoUpgradePool ''
#  The code of the DoH option to use in Discovery of Designated Resolvers exchanges.
#  Default is 7, which is what all servers should use. Possible values are 0 to 65535.
#  option autoUpgradeDoHKey '7'
